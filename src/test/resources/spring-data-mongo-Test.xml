<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   			http://www.springframework.org/schema/data/mongo
    		http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

	<mongo:repositories
		base-package="uk.ac.ebi.ddi.service.db.repo" />

	<!-- Default bean name is 'mongo' -->
	<mongo:mongo host="mongos-hxvm7-dev-001.ebi.ac.uk" port="27017" />
    <mongo:db-factory id="mongoDbFactory" host="mongos-hxvm7-dev-001.ebi.ac.uk" port="27017" dbname="ddi_db" />
	<!-- Offers convenience methods and automatic mapping between MongoDB JSON 
		documents and your domain classes. -->
<!--	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="test" />
	</bean>-->
	
<!-- alternate config with in memory java driver to mongo With this, you are not going through mongo local db, instead of that, you are using a inmemory mongo instance --> 
	<!--<bean name="fongo" class="com.github.fakemongo.Fongo">-->
		<!--<constructor-arg value="InMemoryMongo" />-->
	<!--</bean>-->
	
	<!--<bean id="mongofongo" factory-bean="fongo" factory-method="getMongo" />-->

	<!--<mongo:db-factory id="mongoDbFactory" mongo-ref="mongofongo" />-->

	<!-- localhost settings for mongo -->
	<!--<mongo:db-factory id="mongoDbFactory" /> -->
<!--  -->

    <mongo:mongo id="replicaSetMongo" replica-set="mongos-hxvm7-dev-001.ebi.ac.uk:27017" />
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <!-- <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" /> -->
        <constructor-arg ref="replicaSetMongo" />
        <constructor-arg name="databaseName" value="ddi_db" />
        <constructor-arg name="userCredentials" ref="mongoCredentials" />
    </bean>
    <bean id="mongoCredentials" class="org.springframework.data.authentication.UserCredentials">
        <constructor-arg name="username" value="${mongo.username}" />
        <constructor-arg name="password" value="${mongo.password}" />
    </bean>

	<!--<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongoDbFactory" />
	</bean>-->

    <bean id="service" class="uk.ac.ebi.ddi.service.db.service.logger.DatasetResourceService"/>
    <bean id="accessService" class="uk.ac.ebi.ddi.service.db.service.logger.HttpEventService"/>
	<bean id="wordService" class="uk.ac.ebi.ddi.service.db.service.enrichment.SynonymsService"/>
	<bean id="termService" class="uk.ac.ebi.ddi.service.db.service.similarity.TermInDBService"/>
	<bean id="enrichmentService" class="uk.ac.ebi.ddi.service.db.service.enrichment.EnrichmentInfoService"/>
	<bean id="datasetStatInfoService" class="uk.ac.ebi.ddi.service.db.service.similarity.DatasetStatInfoService"/>
	<bean id="termInDBService" class="uk.ac.ebi.ddi.service.db.service.similarity.TermInDBService"/>
	<bean id="expOutputDatasetService" class="uk.ac.ebi.ddi.service.db.service.similarity.ExpOutputDatasetService"/>
	<bean id="InDBServiceRepo" class="uk.ac.ebi.ddi.service.db.repo.similarity.ITermInDBRepoImpl"/>
	<!--<bean id = "expOutputDatasetRepo" class = "uk.ac.ebi.ddi.service.db.repo.similarity.IExpOutputDatasetRepoimpl"/>-->
	<bean id="datasetService"       class="uk.ac.ebi.ddi.service.db.service.dataset.DatasetService" />
	<bean id="datasetStatusService" class="uk.ac.ebi.ddi.service.db.service.dataset.DatasetStatusService"/>

	<bean id="publicationService" class="uk.ac.ebi.ddi.service.db.service.publication.PublicationDatasetService" />

    <bean class="uk.ac.ebi.ddi.service.db.utils.CascadingMongoEventListener" />

</beans>
